<UserControl x:Class="TAC_COM.Views.AudioInterfaceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TAC_COM.Views" 
             xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
             xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
             xmlns:viewmodels="clr-namespace:TAC_COM.ViewModels" 
             d:DataContext="{d:DesignInstance Type=viewmodels:AudioInterfaceViewModel}"
             mc:Ignorable="d" 
             FontSize="12">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Column="2" Grid.Row="4" Background="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}"
                    HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Height="Auto">

            <StackPanel Width="400" VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal" Margin="5">
                <Label HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="16"
                       Foreground="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}">
                    <TextBlock TextAlignment="Left" TextWrapping="WrapWithOverflow" Width="70" 
                               HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Normal">
                        INPUT
                    </TextBlock>
                </Label>

                <ComboBox x:Name="InputSelection" Width="300" 
                          ItemsSource="{Binding AllInputDevices}"
                          SelectedItem="{Binding InputDevice}"
                          IsEnabled="{Binding IsSelectable}"
                          Text="SELECT INPUT DEVICE" FontFamily="Calibri" FontSize="14"
                          IsReadOnly="True" IsEditable="True" 
                          VerticalAlignment="Center" HorizontalAlignment="Center">
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="MaxWidth" Value="280"/>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>

                <ProgressBar Grid.Column="2" Grid.Row="4" Orientation="Vertical" Height="20" Width="4" Margin="10, 0, 0, 0"
                             VerticalAlignment="Center" HorizontalAlignment="Center"
                             Foreground="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}"
                             Value="{Binding AudioManager.InputPeakMeter}"/>
            </StackPanel>

            <StackPanel Width="400" VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal" Margin="5">
                <Label HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="16"
                       Foreground="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}">
                    <TextBlock TextAlignment="Left" TextWrapping="WrapWithOverflow" 
                               Width="70" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Normal">
                        OUTPUT
                    </TextBlock>
                </Label>

                <ComboBox x:Name="OutputSelection" Width="300"
                          ItemsSource="{Binding AllOutputDevices}"
                          SelectedItem="{Binding OutputDevice}"
                          IsEnabled="{Binding IsSelectable}"
                          Text="SELECT VIRTUAL OUTPUT DEVICE" FontFamily="Calibri" FontSize="14"
                          IsReadOnly="True" IsEditable="True" 
                          VerticalAlignment="Center" HorizontalAlignment="Center">
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="MaxWidth" Value="280"/>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>

                <ProgressBar Grid.Column="2" Grid.Row="4" Orientation="Vertical" Height="20" Width="4" Margin="10, 0, 0, 0"
                             VerticalAlignment="Center" HorizontalAlignment="Center"
                             Foreground="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}"
                             Value="{Binding AudioManager.OutputPeakMeter}"/>
            </StackPanel>

            <StackPanel Width="400" VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal" Margin="5">
                <Label HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="16"
                       Foreground="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}">
                    <TextBlock TextAlignment="Left" TextWrapping="WrapWithOverflow" 
                               Width="70" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Normal">
                        PROFILE
                    </TextBlock>
                </Label>

                <ComboBox x:Name="ProfileSelection" Width="300"
                          ItemsSource="{Binding Profiles}"
                          SelectedItem="{Binding ActiveProfile}"
                          IsEnabled="{Binding IsSelectable}"
                          Text="SELECT MANUFACTURER" FontFamily="Calibri" FontSize="14"
                          IsReadOnly="True" IsEditable="True" 
                          VerticalAlignment="Center" HorizontalAlignment="Center">
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="MaxWidth" Value="280"/>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>
            </StackPanel>

            <StackPanel Width="400" VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal" Margin="5">
                <Label HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="16"
                       Foreground="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}">
                    <TextBlock TextAlignment="Left" TextWrapping="WrapWithOverflow" 
                               Width="70" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Normal">
                        PTT KEY
                    </TextBlock>
                </Label>

                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <Label DockPanel.Dock="Left" VerticalAlignment="Center" VerticalContentAlignment="Center"
                           FontWeight="Normal"
                           Width="250" Height="20" IsEnabled="{Binding IsSelectable}" Content="{Binding KeybindName}"/>
                    <Border BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer2BorderBrush}}" BorderThickness="1" CornerRadius="1">
                        <Button DockPanel.Dock="Right" Width="50" Height="20" 
                                HorizontalAlignment="Center" VerticalAlignment="Center" 
                                HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                Foreground="{DynamicResource {x:Static adonisUi:Brushes.Layer2IntenseHighlightBrush}}" 
                                Background="{DynamicResource {x:Static adonisUi:Brushes.Layer2HighlightBrush}}" Cursor="Hand"
                                IsEnabled="{Binding IsSelectable}" Command="{Binding ShowKeybindDialog}" FontSize="10"
                                BorderThickness="0"
                                adonisExtensions:CursorSpotlightExtension.RelativeSpotlightSize="0"
                                adonisExtensions:CursorSpotlightExtension.MaxBlurRadius="0">
                            EDIT
                        </Button>
                    </Border>
                   
                </StackPanel>
            </StackPanel>

            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
                <ToggleButton HorizontalAlignment="Center" Margin="10" Width="140"
                              Foreground="{DynamicResource {x:Static adonisUi:Brushes.Layer2IntenseHighlightBrush}}" 
                              FontSize="18" FontWeight="ExtraLight" Padding="5"
                              IsChecked="{Binding State}" VerticalAlignment="Center" Cursor="Hand">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                                BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="1">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2BackgroundBrush}}"/>
                                    <Setter Property="Content" Value="DISABLE"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2BorderBrush}}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2HighlightBrush}}"/>
                                    <Setter Property="Content" Value="ENABLE"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2BorderBrush}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2InteractionBrush}}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3BackgroundBrush}}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <ToggleButton HorizontalAlignment="Center" Margin="10" Width="140"
                              Foreground="{DynamicResource {x:Static adonisUi:Brushes.Layer2IntenseHighlightBrush}}" 
                              FontSize="18" FontWeight="ExtraLight"
                              IsChecked="{Binding BypassState}" IsEnabled="{Binding State}"
                              VerticalAlignment="Center" Cursor="Hand">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                                BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="1">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2BackgroundBrush}}"/>
                                    <Setter Property="Content" Value="BYPASS"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2BorderBrush}}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2HighlightBrush}}"/>
                                    <Setter Property="Content" Value="PUSH TO TALK"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2BorderBrush}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2InteractionBrush}}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3BackgroundBrush}}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.3"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

            </StackPanel>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0, 10, 0, 0">

                <StackPanel Orientation="Vertical" Width="240">
                    <Label x:Name="GateThreshold" Content="NOISE GATE THRESHOLD" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Normal"/>
                    <Label Content="{Binding AudioManager.NoiseGateThresholdString}" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40"
                          Background="Transparent">
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Slider Grid.Column="2" HorizontalAlignment="Center" Grid.Row="4"
                                    VerticalAlignment="Center" Width="120" 
                                    Value="{Binding NoiseGateThreshold}" Minimum="-100" Maximum="0" 
                                    TickPlacement="TopLeft" TickFrequency="5" IsSnapToTickEnabled="False"/>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>

                <StackPanel Orientation="Vertical" Width="240">
                    <Label Content="OUTPUT LEVEL" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Normal"/>
                    <Label Content="{Binding AudioManager.OutputGainLevelString}" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40"
                                Background="Transparent">
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Slider x:Name="OutputLevel" Grid.Column="2" HorizontalAlignment="Center" Grid.Row="4"
                                    VerticalAlignment="Center" Width="120" Maximum="10" Minimum="-10"
                                    Value="{Binding OutputLevel}" TickPlacement="TopLeft" SmallChange="1" IsSnapToTickEnabled="True"/>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>

                <StackPanel Orientation="Vertical" Width="240">
                    <Label Content="INTERFERENCE" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Normal"/>
                    <Label Content="{Binding AudioManager.NoiseLevelString}" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Height="40"
                                Background="Transparent">
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Slider x:Name="NoiseLevel" Grid.Column="2" HorizontalAlignment="Center" Grid.Row="4"
                                    VerticalAlignment="Center" Width="120" TickPlacement="TopLeft" IsSnapToTickEnabled="True"
                                    Value="{Binding InterferenceLevel}" TickFrequency="0.1" Maximum="1"/>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </StackPanel>

    </Grid>
</UserControl>
